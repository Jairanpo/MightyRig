import maya.cmds as cmds
import maya.mel as mel
def Foot_R():
    Scale_Guide=cmds.xform('Guide_Ctrl_Master',ws=True, q=True, s=True )[0]
    #########Create_Ctrls_FK_R#############
    #Create_Ctrl_Ankle_FK_R
    translate = cmds.xform ('J_Ankle_FK_R', ws=True, q=True, t=True)
    rot = cmds.xform ('J_Ankle_FK_R', ws=True, q=True, ro=True)
    #Emparentar R_FK_Ankle_CTL
    emparentarTrans_R = cmds.xform ('P_R_FK_Ankle_CTL', ws=True, t=translate)
    emparentarRot_R = cmds.xform ('P_R_FK_Ankle_CTL', ws=True, ro=rot)
    cmds.parentConstraint ('R_FK_Ankle_CTL', 'J_Ankle_FK_R',mo=True)
    #Create_Ctrl_Toe_FK_R
    translate = cmds.xform ('J_Toe_FK_R', ws=True, q=True, t=True)
    rot = cmds.xform ('J_Toe_FK_R', ws=True, q=True, ro=True)
    #Emparentar R_FK_Toe_CTL
    emparentarTrans_R = cmds.xform ('P_R_FK_Toe_CTL', ws=True, t=translate)
    emparentarRot_R = cmds.xform ('P_R_FK_Toe_CTL', ws=True, ro=rot)
    cmds.parentConstraint ('R_FK_Toe_CTL', 'J_Toe_FK_R',mo=True)
    #Herarchy FK_Ctrls
    P_Ctrl_Toe_R_Ctrl_Ankle_R= cmds.parent(("P_R_FK_Toe_CTL","R_FK_Ankle_CTL"))
    P_Ankle_R_Ctrl_ForeLeg_R= cmds.parent(("P_R_FK_Ankle_CTL","R_FK_ForeLeg_CTL"))
    #Create Attrs ReverseFoot
    Atributo_FootRoll= cmds.addAttr('R_IK_Leg_CTL',longName='FootRoll',attributeType='float', defaultValue=0, minValue=-10, maxValue=10 )
    AgLegar_FootRoll= cmds.setAttr ('R_IK_Leg_CTL' + '.FootRoll', k=True)
    Atributo_Banking= cmds.addAttr('R_IK_Leg_CTL',longName='Banking',attributeType='float', defaultValue=0, minValue=-10, maxValue=10 )
    AgLegar_Banking= cmds.setAttr ('R_IK_Leg_CTL' + '.Banking', k=True)
    Atributo_Tip= cmds.addAttr('R_IK_Leg_CTL',longName='Tip',attributeType='float', defaultValue=0, minValue=-10, maxValue=10 )
    AgLegar_Tip= cmds.setAttr ('R_IK_Leg_CTL'+ '.Tip', k=True)
    Atributo_Heel_Swivel= cmds.addAttr('R_IK_Leg_CTL',longName='Heel_Swivel',attributeType='float', defaultValue=0, minValue=-10, maxValue=10 )
    AgLegar_Heel_Swivel= cmds.setAttr ('R_IK_Leg_CTL' + '.Heel_Swivel', k=True)
    Atributo_Ball_Swivel= cmds.addAttr('R_IK_Leg_CTL',longName='Ball_Swivel',attributeType='float', defaultValue=0, minValue=-10, maxValue=10 )
    AgLegar_Ball_Swivel= cmds.setAttr ('R_IK_Leg_CTL' + '.Ball_Swivel', k=True)
    translate_Guide_BallPivot_R = cmds.xform ('Guide_BallPivot_R', ws=True, q=True, t=True)
    rot_Guide_FootRoll_R = cmds.xform ('J_Toe_Neutral_R', ws=True, q=True, ro=True)
    #BALL_PIVOT
    Z_BallPivot_R= cmds.group(n='Z_BallPivot_R',em=True)
    P_BallPivot_R= cmds.group(n='P_BallPivot_R')
    translate_Guide_BallPivot_R = cmds.xform ('Guide_BallPivot_R', ws=True, q=True, t=True)
    rot_Guide_BallPivot_R = cmds.xform ('Guide_BallPivot_R', ws=True, q=True, ro=True)
    emp_Trans_Guide_BallPivot_R = cmds.xform (P_BallPivot_R,ws=True, t=translate_Guide_BallPivot_R)
    emp_Rot_Guide_BallPivot_R = cmds.xform (P_BallPivot_R, ws=True, ro=rot_Guide_FootRoll_R)
    #HEEL
    Z_Heel_R= cmds.group(n='Z_Heel_R',em=True)
    P_Heel_R= cmds.group(n='P_Heel_R')
    translate_Guide_Heel_R = cmds.xform ('Guide_Heel_R', ws=True, q=True, t=True)
    emp_Trans_Guide_Heel_R = cmds.xform (P_Heel_R,ws=True, t=translate_Guide_Heel_R)
    emp_Rot_Guide_Heel_R = cmds.xform (P_Heel_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_ball_p_heel= cmds.parent(P_Heel_R, Z_BallPivot_R)
    #BANKOUT
    Z_BankOut_R= cmds.group(n='Z_BankOut_R',em=True)
    P_BankOut_R= cmds.group(n='P_BankOut_R')
    translate_Guide_BankOut_R = cmds.xform ('Guide_BankOut_R', ws=True, q=True, t=True)
    emp_Trans_Guide_BankOut_R = cmds.xform (P_BankOut_R,ws=True, t=translate_Guide_BankOut_R)
    emp_Rot_Guide_BankOut_R = cmds.xform (P_BankOut_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_heel_p_bankout= cmds.parent(P_BankOut_R, Z_Heel_R)
    #BANKIN
    Z_BankIn_R= cmds.group(n='Z_BankIn_R',em=True)
    P_BankIn_R= cmds.group(n='P_BankIn_R')
    translate_Guide_BankIn_R = cmds.xform ('Guide_BankIn_R', ws=True, q=True, t=True)
    emp_Trans_Guide_BankIn_R = cmds.xform (P_BankIn_R,ws=True, t=translate_Guide_BankIn_R)
    emp_Rot_Guide_BankIn_R = cmds.xform (P_BankIn_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_bankout_p_bankin= cmds.parent(P_BankIn_R, Z_BankOut_R)
    #TIP
    Z_Tip_R= cmds.group(n='Z_Tip_R',em=True)
    P_Tip_R= cmds.group(n='P_Tip_R')
    translate_Guide_Tip_R = cmds.xform ('Guide_Tip_Reverse_Foot_R', ws=True, q=True, t=True)
    emp_Trans_Guide_Tip_R = cmds.xform (P_Tip_R,ws=True, t=translate_Guide_Tip_R)
    emp_Rot_Guide_Tip_R = cmds.xform (P_Tip_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_bankin_p_tip= cmds.parent(P_Tip_R, Z_BankIn_R)
    #FOOTROLL
    Z_FootRoll_R= cmds.group(n='Z_FootRoll_R',em=True)
    P_FootRoll_R= cmds.group(n='P_FootRoll_R')
    translate_Guide_FootRoll_R = cmds.xform ('J_Toe_Neutral_R', ws=True, q=True, t=True)
    emp_Trans_Guide_FootRoll_R = cmds.xform (P_FootRoll_R,ws=True, t=translate_Guide_FootRoll_R)
    emp_Rot_Guide_FootRoll_R = cmds.xform (P_FootRoll_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_tip_p_footroll= cmds.parent(P_FootRoll_R, Z_Tip_R)
    #ANKLE
    Z_Ankle_R= cmds.group(n='Z_Ankle_R',em=True)
    P_Ankle_R= cmds.group(n='P_Ankle_R')
    translate_Guide_Ankle_R = cmds.xform ('J_Ankle_Neutral_R', ws=True, q=True, t=True)
    emp_Trans_Guide_Ankle_R = cmds.xform (P_Ankle_R,ws=True, t=translate_Guide_Ankle_R)
    emp_Rot_Guide_Ankle_R = cmds.xform (P_Ankle_R, ws=True, ro=rot_Guide_FootRoll_R)
    z_footroll_p_ankle= cmds.parent(P_Ankle_R, Z_FootRoll_R)
    cmds.select(d=True)
    cmds.ikHandle( sj='J_Ankle_IK_R', ee='J_Toe_IK_R',sol='ikSCsolver', p=1, w=1,n='IkHandle_Toe_R')
    cmds.ikHandle( sj='J_Toe_IK_R', ee='J_Tip_IK_R',sol='ikSCsolver', p=1, w=1,n='IkHandle_Tip_R')
    cmds.select(d=True)
    cmds.parent('IkHandle_Toe_R',Z_FootRoll_R)
    cmds.parent('IkHandle_Tip_R',Z_Tip_R)
    cmds.hide('IkHandle_Tip_R')
    cmds.hide('IkHandle_Toe_R')
    cmds.parent(P_BallPivot_R,'R_IK_Leg_CTL')
    cmds.parent('Ik_Ankle_Leg_R',Z_Ankle_R)
    cmds.select(d=True)
    #FOOTROLL
    cmds.setAttr('R_IK_Leg_CTL' + '.FootRoll',0)
    cmds.setAttr('Z_FootRoll_R.rotateY',0)
    cmds.setDrivenKeyframe ('Z_FootRoll_R.rotateY', cd=('R_IK_Leg_CTL' + '.FootRoll'))
    cmds.setAttr('R_IK_Leg_CTL'+'.FootRoll',10)
    cmds.setAttr('Z_FootRoll_R.rotateY',90)
    cmds.setDrivenKeyframe ('Z_FootRoll_R.rotateY', cd=('R_IK_Leg_CTL'+'.FootRoll'))
    cmds.setAttr('R_IK_Leg_CTL'+'.FootRoll',0)
    ####HEEL
    cmds.setAttr('R_IK_Leg_CTL'+'.FootRoll',0)
    cmds.setAttr('Z_Heel_R.rotateY',0)
    cmds.setDrivenKeyframe ('Z_Heel_R.rotateY', cd=('R_IK_Leg_CTL'+'.FootRoll'))
    cmds.setAttr('R_IK_Leg_CTL'+'.FootRoll',-10)
    cmds.setAttr('Z_Heel_R.rotateY',-50)
    cmds.setDrivenKeyframe ('Z_Heel_R.rotateY', cd=('R_IK_Leg_CTL'+'.FootRoll'))
    cmds.setAttr('R_IK_Leg_CTL'+'.FootRoll',0)
    ####BANKING
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',0)
    cmds.setAttr('Z_BankOut_R.rotateX',0)
    cmds.setDrivenKeyframe ('Z_BankOut_R.rotateX', cd=('R_IK_Leg_CTL'+'.Banking'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',10)
    cmds.setAttr('Z_BankOut_R.rotateX',-50)
    cmds.setDrivenKeyframe ('Z_BankOut_R.rotateX', cd=('R_IK_Leg_CTL'+'.Banking'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',0)
    ####BANKOUT
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',0)
    cmds.setAttr('Z_BankIn_R.rotateX',0)
    cmds.setDrivenKeyframe ('Z_BankIn_R.rotateX', cd=('R_IK_Leg_CTL'+'.Banking'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',-10)
    cmds.setAttr('Z_BankIn_R.rotateX',50)
    cmds.setDrivenKeyframe ('Z_BankIn_R.rotateX', cd=('R_IK_Leg_CTL'+'.Banking'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Banking',0)
    ####TIP
    cmds.setAttr('R_IK_Leg_CTL'+'.Tip',0)
    cmds.setAttr('Z_Tip_R.rotateY',0)
    cmds.setDrivenKeyframe ('Z_Tip_R.rotateY', cd=('R_IK_Leg_CTL'+'.Tip'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Tip',10)
    cmds.setAttr('Z_Tip_R.rotateY',90)
    cmds.setDrivenKeyframe ('Z_Tip_R.rotateY', cd=('R_IK_Leg_CTL'+'.Tip'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Tip',0)
    cmds.setAttr('R_IK_Leg_CTL'+'.Tip',-10)
    cmds.setAttr('Z_Tip_R.rotateY',-40)
    cmds.setDrivenKeyframe ('Z_Tip_R.rotateY', cd=('R_IK_Leg_CTL'+'.Tip'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Tip',0)
    ####HEEL_SWIVEL
    cmds.setAttr('R_IK_Leg_CTL'+'.Heel_Swivel',0)
    cmds.setAttr('Z_Heel_R.rotateZ',0)
    cmds.setDrivenKeyframe ('Z_Heel_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Heel_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Heel_Swivel',10)
    cmds.setAttr('Z_Heel_R.rotateZ',50)
    cmds.setDrivenKeyframe ('Z_Heel_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Heel_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Heel_Swivel',0)
    cmds.setAttr('R_IK_Leg_CTL'+'.Heel_Swivel',-10)
    cmds.setAttr('Z_Heel_R.rotateZ',-50)
    cmds.setDrivenKeyframe ('Z_Heel_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Heel_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Heel_Swivel',0)
    ####BALL_SWIVEL
    cmds.setAttr('R_IK_Leg_CTL'+'.Ball_Swivel',0)
    cmds.setAttr('Z_BallPivot_R.rotateZ',0)
    cmds.setDrivenKeyframe ('Z_BallPivot_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Ball_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Ball_Swivel',10)
    cmds.setAttr('Z_BallPivot_R.rotateZ',50)
    cmds.setDrivenKeyframe ('Z_BallPivot_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Ball_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Ball_Swivel',0)
    cmds.setAttr('R_IK_Leg_CTL'+'.Ball_Swivel',-10)
    cmds.setAttr('Z_BallPivot_R.rotateZ',-50)
    cmds.setDrivenKeyframe ('Z_BallPivot_R.rotateZ', cd=('R_IK_Leg_CTL'+'.Ball_Swivel'))
    cmds.setAttr('R_IK_Leg_CTL'+'.Ball_Swivel',0)
    Select_Ankle=cmds.select('J_Toe_Neutral_R','J_Tip_Neutral_R')
    sel = cmds.ls (sl=True)
    def Clear_Select():
        cmds.select (cl=True)
    Clear_Select()
    MD_switch_fk_ik = cmds.shadingNode ("multiplyDivide", asUtility=True, n="MD_Ankle_Switch_FK_IK_R")
    cmds.setAttr(MD_switch_fk_ik+'.operation',2)
    cmds.setAttr(MD_switch_fk_ik+'.input2X',10)
    cmds.connectAttr ('R_SwitchLeg_CTL.Switch_FK_IK', MD_switch_fk_ik + ".input1X")
    for J in sel:
        N = J.split("_Neutral_R")[0]
        print N
        New_N=N.split("J_")[1]
        BC_rotate = cmds.shadingNode ("blendColors", asUtility=True, n="BC_" + New_N+"_rotate_R")
        BC_translate = cmds.shadingNode ("blendColors", asUtility=True, n="BC_" + New_N+"_translate_R")
        cmds.connectAttr (BC_rotate + ".output", J + ".rotate")
        cmds.connectAttr (MD_switch_fk_ik + ".outputX", BC_rotate + ".blender")
        cmds.connectAttr (BC_translate + ".output", J + ".translate")
        cmds.connectAttr (MD_switch_fk_ik + ".outputX", BC_translate + ".blender")
    j_Ankle_neutral=('J_Ankle_Neutral_R')
    j_Toe_neutral=('J_Toe_Neutral_R')
    jnt_Tip_neutral_R=('J_Tip_Neutral_R')
    JN1 = j_Ankle_neutral.split("_Neutral_R")[0]
    JN2 = j_Toe_neutral.split("_Neutral_R")[0]
    JN3 = jnt_Tip_neutral_R.split("_Neutral_R")[0]
    Milista=[]
    list.append(Milista,JN1)
    list.append(Milista,JN2)
    list.append(Milista,JN3)
    def fun1(Var1):    
        list.append (Milista, Milista[0] + Var1)
        list.append (Milista, Milista[1] + Var1)
        list.append (Milista, Milista[2] + Var1)
    fun1('_FK_R')
    fun1('_IK_R')
    def fun(Var):
        cmds.connectAttr (Milista[4]+ "."+Var, "BC_Toe_"+Var+"_R.color2")
        cmds.connectAttr (Milista[7]+ "."+Var, "BC_Toe_"+Var+"_R.color1")
        cmds.connectAttr (Milista[5]+ "."+Var, "BC_Tip_"+Var+"_R.color2")
        cmds.connectAttr (Milista[8]+ "."+Var, "BC_Tip_"+Var+"_R.color1")
    fun('rotate')
    fun('translate')